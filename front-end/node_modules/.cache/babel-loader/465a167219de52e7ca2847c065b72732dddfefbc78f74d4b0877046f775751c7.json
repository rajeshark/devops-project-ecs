{"ast":null,"code":"import _objectSpread from\"D:/raju new 1/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _taggedTemplateLiteral from\"D:/raju new 1/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React,{useEffect,useState}from'react';import{useNavigate,useLocation}from'react-router-dom';import styled from'styled-components';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 60vh;\\n  text-align: center;\\n  padding: 20px;\\n\"])));const Title=styled.h1(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  color: green;\\n  margin-bottom: 20px;\\n\"])));const Message=styled.p(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  margin-bottom: 30px;\\n\"])));const EmailStatus=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  margin: 15px 0;\\n  padding: 10px 20px;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  \\n  \",\"\\n  \\n  \",\"\\n  \\n  \",\"\\n\"])),props=>props.type==='loading'&&\"\\n    background-color: #e7f3ff;\\n    color: #0066cc;\\n    border: 1px solid #b3d9ff;\\n  \",props=>props.type==='success'&&\"\\n    background-color: #d4edda;\\n    color: #155724;\\n    border: 1px solid #c3e6cb;\\n  \",props=>props.type==='error'&&\"\\n    background-color: #f8d7da;\\n    color: #721c24;\\n    border: 1px solid #f5c6cb;\\n  \");const Button=styled.button(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 15px 30px;\\n  background-color: black;\\n  color: white;\\n  border: none;\\n  cursor: pointer;\\n  font-size: 16px;\\n  margin: 0 10px;\\n  \\n  &:hover {\\n    background-color: #333;\\n  }\\n\"])));const ButtonContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  gap: 15px;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  \\n  @media (max-width: 480px) {\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\"])));const Success=()=>{const navigate=useNavigate();const location=useLocation();const[emailStatus,setEmailStatus]=useState('sending');useEffect(()=>{const sendConfirmationEmails=async()=>{try{// Get order data from localStorage (assuming you store it during checkout)\nconst orderData=JSON.parse(localStorage.getItem('lastOrder'));const user=JSON.parse(localStorage.getItem('user'));if(orderData&&user&&user.email){// Send order confirmation email\nawait axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/email/order-confirmation\"),{orderData:_objectSpread(_objectSpread({},orderData),{},{id:orderData.id||\"ORD\".concat(Date.now()),createdAt:new Date().toISOString(),status:'confirmed'}),userEmail:user.email});// Send payment confirmation email\nawait axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/api/email/payment-confirmation\"),{paymentData:{id:\"PAY\".concat(Date.now()),orderId:orderData.id||\"ORD\".concat(Date.now()),amount:orderData.total||orderData.amount,status:'completed',paymentMethod:orderData.paymentMethod||'Credit Card',updatedAt:new Date().toISOString()},userEmail:user.email});setEmailStatus('sent');// Clear the order from localStorage after successful email\nlocalStorage.removeItem('lastOrder');}else{setEmailStatus('no-data');}}catch(error){console.error('Failed to send confirmation emails:',error);setEmailStatus('failed');}};sendConfirmationEmails();},[]);const getEmailStatusMessage=()=>{switch(emailStatus){case'sending':return'📧 Sending order confirmation...';case'sent':return'✅ Order and payment confirmation emails sent!';case'failed':return'⚠️ Order successful, but email confirmation failed.';case'no-data':return'✅ Order successful!';default:return'';}};const getEmailStatusType=()=>{switch(emailStatus){case'sending':return'loading';case'sent':return'success';case'failed':case'no-data':return'error';default:return'loading';}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Title,{children:\"Order Successful! \\uD83C\\uDF89\"}),/*#__PURE__*/_jsx(Message,{children:\"Thank you for your purchase. Your order has been placed successfully.\"}),emailStatus!=='no-data'&&/*#__PURE__*/_jsx(EmailStatus,{type:getEmailStatusType(),children:getEmailStatusMessage()}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>navigate('/'),children:\"Continue Shopping\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>navigate('/orders'),children:\"View My Orders\"})]})]});};export default Success;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","styled","axios","jsx","_jsx","jsxs","_jsxs","Container","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","Message","p","_templateObject3","EmailStatus","_templateObject4","props","type","Button","button","_templateObject5","ButtonContainer","_templateObject6","Success","navigate","location","emailStatus","setEmailStatus","sendConfirmationEmails","orderData","JSON","parse","localStorage","getItem","user","email","post","concat","process","env","REACT_APP_API_URL","_objectSpread","id","Date","now","createdAt","toISOString","status","userEmail","paymentData","orderId","amount","total","paymentMethod","updatedAt","removeItem","error","console","getEmailStatusMessage","getEmailStatusType","children","onClick"],"sources":["D:/raju new 1/front-end/src/pages/Success.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 60vh;\r\n  text-align: center;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: green;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst EmailStatus = styled.div`\r\n  margin: 15px 0;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  \r\n  ${props => props.type === 'loading' && `\r\n    background-color: #e7f3ff;\r\n    color: #0066cc;\r\n    border: 1px solid #b3d9ff;\r\n  `}\r\n  \r\n  ${props => props.type === 'success' && `\r\n    background-color: #d4edda;\r\n    color: #155724;\r\n    border: 1px solid #c3e6cb;\r\n  `}\r\n  \r\n  ${props => props.type === 'error' && `\r\n    background-color: #f8d7da;\r\n    color: #721c24;\r\n    border: 1px solid #f5c6cb;\r\n  `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 15px 30px;\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin: 0 10px;\r\n  \r\n  &:hover {\r\n    background-color: #333;\r\n  }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  \r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Success = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [emailStatus, setEmailStatus] = useState('sending');\r\n\r\n  useEffect(() => {\r\n    const sendConfirmationEmails = async () => {\r\n      try {\r\n        // Get order data from localStorage (assuming you store it during checkout)\r\n        const orderData = JSON.parse(localStorage.getItem('lastOrder'));\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        \r\n        if (orderData && user && user.email) {\r\n          // Send order confirmation email\r\n          await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/email/order-confirmation`,\r\n            {\r\n              orderData: {\r\n                ...orderData,\r\n                id: orderData.id || `ORD${Date.now()}`,\r\n                createdAt: new Date().toISOString(),\r\n                status: 'confirmed'\r\n              },\r\n              userEmail: user.email\r\n            }\r\n          );\r\n\r\n          // Send payment confirmation email\r\n          await axios.post(\r\n            `${process.env.REACT_APP_API_URL}/api/email/payment-confirmation`,\r\n            {\r\n              paymentData: {\r\n                id: `PAY${Date.now()}`,\r\n                orderId: orderData.id || `ORD${Date.now()}`,\r\n                amount: orderData.total || orderData.amount,\r\n                status: 'completed',\r\n                paymentMethod: orderData.paymentMethod || 'Credit Card',\r\n                updatedAt: new Date().toISOString()\r\n              },\r\n              userEmail: user.email\r\n            }\r\n          );\r\n\r\n          setEmailStatus('sent');\r\n          \r\n          // Clear the order from localStorage after successful email\r\n          localStorage.removeItem('lastOrder');\r\n        } else {\r\n          setEmailStatus('no-data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to send confirmation emails:', error);\r\n        setEmailStatus('failed');\r\n      }\r\n    };\r\n\r\n    sendConfirmationEmails();\r\n  }, []);\r\n\r\n  const getEmailStatusMessage = () => {\r\n    switch (emailStatus) {\r\n      case 'sending':\r\n        return '📧 Sending order confirmation...';\r\n      case 'sent':\r\n        return '✅ Order and payment confirmation emails sent!';\r\n      case 'failed':\r\n        return '⚠️ Order successful, but email confirmation failed.';\r\n      case 'no-data':\r\n        return '✅ Order successful!';\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const getEmailStatusType = () => {\r\n    switch (emailStatus) {\r\n      case 'sending':\r\n        return 'loading';\r\n      case 'sent':\r\n        return 'success';\r\n      case 'failed':\r\n      case 'no-data':\r\n        return 'error';\r\n      default:\r\n        return 'loading';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Order Successful! 🎉</Title>\r\n      <Message>Thank you for your purchase. Your order has been placed successfully.</Message>\r\n      \r\n      {emailStatus !== 'no-data' && (\r\n        <EmailStatus type={getEmailStatusType()}>\r\n          {getEmailStatusMessage()}\r\n        </EmailStatus>\r\n      )}\r\n      \r\n      <ButtonContainer>\r\n        <Button onClick={() => navigate('/')}>Continue Shopping</Button>\r\n        <Button onClick={() => navigate('/orders')}>View My Orders</Button>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Success;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}